// Generated by Xata Codegen 0.25.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Images",
    columns: [
      { name: "file", type: "file" },
      { name: "embeddings", type: "file" },
    ],
    revLinks: [
      { column: "image", table: "Masks" },
      { column: "original", table: "Operations" },
      { column: "originalImage", table: "Sessions" },
    ],
  },
  {
    name: "Masks",
    columns: [
      { name: "file", type: "file" },
      { name: "points", type: "text" },
      { name: "score", type: "float" },
      { name: "image", type: "link", link: { table: "Images" } },
    ],
    revLinks: [{ column: "mask", table: "Sessions" }],
  },
  {
    name: "Operations",
    columns: [
      { name: "original", type: "link", link: { table: "Images" } },
      { name: "masks", type: "text", notNull: true, defaultValue: "[]" },
      { name: "type", type: "string" },
      { name: "prompt", type: "string" },
    ],
  },
  {
    name: "Sessions",
    columns: [
      { name: "state", type: "string" },
      { name: "originalImage", type: "link", link: { table: "Images" } },
      { name: "mask", type: "link", link: { table: "Masks" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Images = InferredTypes["Images"];
export type ImagesRecord = Images & XataRecord;

export type Masks = InferredTypes["Masks"];
export type MasksRecord = Masks & XataRecord;

export type Operations = InferredTypes["Operations"];
export type OperationsRecord = Operations & XataRecord;

export type Sessions = InferredTypes["Sessions"];
export type SessionsRecord = Sessions & XataRecord;

export type DatabaseSchema = {
  Images: ImagesRecord;
  Masks: MasksRecord;
  Operations: OperationsRecord;
  Sessions: SessionsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Sebastian-s-workspace-u593rk.eu-central-1.xata.sh/db/PhotograftAI",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
